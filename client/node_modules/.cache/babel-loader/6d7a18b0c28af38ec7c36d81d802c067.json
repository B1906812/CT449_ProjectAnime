{"ast":null,"code":"import _asyncToGenerator from \"D:/CT449/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"D:/CT449/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/CT449/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport axios from 'axios';\nvar url = \"/api/post\";\n\nvar API = /*#__PURE__*/function () {\n  function API() {\n    _classCallCheck(this, API);\n  }\n\n  _createClass(API, null, [{\n    key: \"getAllPost\",\n    value: //to get all the post from the server\n    function () {\n      var _getAllPost = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(url);\n\n              case 2:\n                res = _context.sent;\n                return _context.abrupt(\"return\", res.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getAllPost() {\n        return _getAllPost.apply(this, arguments);\n      }\n\n      return getAllPost;\n    }() // to get single post by id\n\n  }, {\n    key: \"getPostByID\",\n    value: function () {\n      var _getPostByID = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(id) {\n        var res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.get(\"\".concat(url, \"/\").concat(id));\n\n              case 2:\n                res = _context2.sent;\n                return _context2.abrupt(\"return\", res.data);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getPostByID(_x) {\n        return _getPostByID.apply(this, arguments);\n      }\n\n      return getPostByID;\n    }() // to get single post by id\n\n  }, {\n    key: \"getAPI\",\n    value: function () {\n      var _getAPI = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(id) {\n        var res;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return axios.get(\"https://api.jikan.moe/v/search/anime?q=\".concat(id));\n\n              case 2:\n                res = _context3.sent;\n                console.log(res.data.results);\n                return _context3.abrupt(\"return\", res.data.results);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getAPI(_x2) {\n        return _getAPI.apply(this, arguments);\n      }\n\n      return getAPI;\n    }() // to insert post into database\n\n  }, {\n    key: \"addPost\",\n    value: function () {\n      var _addPost = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(post) {\n        var res;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return axios.post(url, post);\n\n              case 2:\n                res = _context4.sent;\n                return _context4.abrupt(\"return\", res.data);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function addPost(_x3) {\n        return _addPost.apply(this, arguments);\n      }\n\n      return addPost;\n    }() // to update post into database\n\n  }, {\n    key: \"updatePost\",\n    value: function () {\n      var _updatePost = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(id, post) {\n        var res;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return axios.patch(\"\".concat(url, \"/\").concat(id), post);\n\n              case 2:\n                res = _context5.sent;\n                return _context5.abrupt(\"return\", res.data);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function updatePost(_x4, _x5) {\n        return _updatePost.apply(this, arguments);\n      }\n\n      return updatePost;\n    }() // to delete a post\n\n  }, {\n    key: \"deletePost\",\n    value: function () {\n      var _deletePost = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(id) {\n        var res;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return axios.delete(\"\".concat(url, \"/\").concat(id));\n\n              case 2:\n                res = _context6.sent;\n                return _context6.abrupt(\"return\", res.data);\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function deletePost(_x6) {\n        return _deletePost.apply(this, arguments);\n      }\n\n      return deletePost;\n    }()\n  }]);\n\n  return API;\n}();\n\nexport { API as default };","map":{"version":3,"sources":["D:/CT449/client/src/api.js"],"names":["axios","url","API","get","res","data","id","console","log","results","post","patch","delete"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,GAAG,GAAG,WAAZ;;IAEqBC,G;;;;;;;WACjB;;gFACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACsBF,KAAK,CAACG,GAAN,CAAUF,GAAV,CADtB;;AAAA;AACUG,gBAAAA,GADV;AAAA,iDAEWA,GAAG,CAACC,IAFf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;QAIA;;;;;iFACA,kBAAyBC,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACsBN,KAAK,CAACG,GAAN,WAAaF,GAAb,cAAoBK,EAApB,EADtB;;AAAA;AACUF,gBAAAA,GADV;AAAA,kDAEWA,GAAG,CAACC,IAFf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;QAMC;;;;;4EACA,kBAAoBC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACqBN,KAAK,CAACG,GAAN,kDAAoDG,EAApD,EADrB;;AAAA;AACSF,gBAAAA,GADT;AAEGG,gBAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACC,IAAJ,CAASI,OAArB;AAFH,kDAGUL,GAAG,CAACC,IAAJ,CAASI,OAHnB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;QAOD;;;;;6EACA,kBAAqBC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACsBV,KAAK,CAACU,IAAN,CAAWT,GAAX,EAAgBS,IAAhB,CADtB;;AAAA;AACUN,gBAAAA,GADV;AAAA,kDAEWA,GAAG,CAACC,IAFf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;QAIA;;;;;gFACA,kBAAwBC,EAAxB,EAA4BI,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACsBV,KAAK,CAACW,KAAN,WAAeV,GAAf,cAAsBK,EAAtB,GAA4BI,IAA5B,CADtB;;AAAA;AACUN,gBAAAA,GADV;AAAA,kDAEWA,GAAG,CAACC,IAFf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;QAIA;;;;;gFACA,kBAAwBC,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACsBN,KAAK,CAACY,MAAN,WAAgBX,GAAhB,cAAuBK,EAAvB,EADtB;;AAAA;AACUF,gBAAAA,GADV;AAAA,kDAEWA,GAAG,CAACC,IAFf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;SAhCiBH,G","sourcesContent":["import axios from 'axios';\r\nconst url = \"/api/post\";\r\n\r\nexport default class API {\r\n    //to get all the post from the server\r\n    static async getAllPost() {\r\n        const res = await axios.get(url);\r\n        return res.data;\r\n    }\r\n    // to get single post by id\r\n    static async getPostByID(id) {\r\n        const res = await axios.get(`${url}/${id}`);\r\n        return res.data;\r\n    }\r\n    \r\n    \r\n     // to get single post by id\r\n     static async getAPI(id){\r\n        const res = await axios.get(`https://api.jikan.moe/v/search/anime?q=${id}`);\r\n        console.log(res.data.results);\r\n        return res.data.results;\r\n    }\r\n\r\n\r\n    // to insert post into database\r\n    static async addPost(post) {\r\n        const res = await axios.post(url, post);\r\n        return res.data;\r\n    }\r\n    // to update post into database\r\n    static async updatePost(id, post) {\r\n        const res = await axios.patch(`${url}/${id}`, post);\r\n        return res.data;\r\n    }\r\n    // to delete a post\r\n    static async deletePost(id) {\r\n        const res = await axios.delete(`${url}/${id}`);\r\n        return res.data;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}