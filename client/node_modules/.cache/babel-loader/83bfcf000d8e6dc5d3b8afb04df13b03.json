{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/NGUYEN KIM TV/Desktop/web/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport API from \"../api\";\nexport default {\n  data: function data() {\n    return {\n      rules: [function (value) {\n        return !!value || \"This field is required\";\n      }],\n      post: {\n        title: \"\",\n        category: \"\",\n        content: \"\",\n        image: \"\"\n      },\n      image: \"\"\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return API.getPostByID(_this.$route.params.id);\n\n            case 2:\n              response = _context.sent;\n              _this.post = response;\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  methods: {\n    selectFile: function selectFile(file) {\n      this.image = file[0];\n    },\n    submitForm: function submitForm() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var formData, response;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                formData = new FormData();\n                formData.append(\"image\", _this2.image);\n                formData.append(\"title\", _this2.post.title);\n                formData.append(\"category\", _this2.post.category);\n                formData.append(\"content\", _this2.post.content);\n\n                if (!_this2.$refs.form.validate()) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                _context2.next = 8;\n                return API.addPost(formData);\n\n              case 8:\n                response = _context2.sent;\n\n                _this2.$router.push({\n                  name: \"home\",\n                  params: {\n                    message: response.message\n                  }\n                });\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACAA,MADA,kBACA;AAEA;AACAC;AAAA;AAAA,QADA;AAGAC;AACAC,iBADA;AAEAC,oBAFA;AAGAC,mBAHA;AAIAC;AAJA,OAHA;AASAA;AATA;AAWA,GAdA;AAeAC,SAfA,qBAeA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACAC,uCADA;;AAAA;AACAC,sBADA;AAEA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,GAlBA;AAmBAC;AACAC,cADA,sBACAC,IADA,EACA;AACA;AACA,KAHA;AAIAC,cAJA,wBAIA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAC,wBADA,GACA,cADA;AAEAA;AACAA;AACAA;AACAA;;AALA,qBAMA,4BANA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAOAN,qBAPA;;AAAA;AAOAC,wBAPA;;AAQA;AAAAM;AAAAC;AAAAC;AAAA;AAAA;;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAdA;AAnBA","names":["data","rules","post","title","category","content","image","created","API","response","methods","selectFile","file","submitForm","formData","name","params","message"],"sourceRoot":"src/views","sources":["EditPost.vue"],"sourcesContent":["<template>\r\n    <v-container>\r\n        <v-row no-gutters>\r\n            <v-col sm=\"10\" class=\"mx-auto\">\r\n                <v-card class=\"pa-5\">\r\n                    <v-card-title>Edit This Post</v-card-title>\r\n                    <v-divider></v-divider>\r\n                    <v-form ref=\"form\" @submit.prevent=\"updateForm\" class=\"pa-5\" enctype=\"multipart/form-data\">\r\n                        <v-text-field label=\"Title\" v-model=\"post.title\" prepend-icon=\"mdi-note\" :rules=\"rules\"></v-text-field>\r\n\r\n                        <v-text-field label=\"Category\" v-model=\"post.category\" prepend-icon=\"mdi-view-list\" :rules=\"rules\"></v-text-field>\r\n\r\n                        <v-textarea label=\"Content\" v-model=\"post.content\" prepend-icon=\"mdi-note-plus\" :rules=\"rules\"></v-textarea>\r\n\r\n                        <v-file-input @change=\"selectFile\" show-size counter multiple label=\"Select Image\"></v-file-input>\r\n\r\n                        <v-btn type=\"submit\" class=\"mt-3\" color=\"success\">Update Post</v-btn>\r\n                    </v-form>\r\n                </v-card>\r\n            </v-col>\r\n        </v-row>\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\nimport API from \"../api\";\r\nexport default {\r\n    data(){\r\n        \r\n        return{\r\n            rules: [(value) => !!value || \"This field is required\"],\r\n           \r\n            post:{\r\n                title:\"\",\r\n                category:\"\",\r\n                content:\"\",\r\n                image:\"\",\r\n            },\r\n            image: \"\",\r\n        };\r\n    },\r\n    async created(){\r\n        const response = await API.getPostByID(this.$route.params.id);\r\n        this.post = response;\r\n    },\r\n    methods: {\r\n        selectFile(file){\r\n            this.image = file[0];\r\n        },\r\n        async submitForm(){\r\n            const formData = new FormData();\r\n            formData.append(\"image\", this.image);\r\n            formData.append(\"title\", this.post.title);\r\n            formData.append(\"category\", this.post.category);\r\n            formData.append(\"content\", this.post.content);\r\n            if(this.$refs.form.validate()){ \r\n                const response = await API.addPost(formData);\r\n                this.$router.push({ name:\"home\", params: {message: response.message } });\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}